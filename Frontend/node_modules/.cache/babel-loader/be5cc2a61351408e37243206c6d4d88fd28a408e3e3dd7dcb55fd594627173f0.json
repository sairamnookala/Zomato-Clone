{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sairam\\\\Projects\\\\anits-assign-sairamnookala\\\\zomato-frontend\\\\src\\\\components\\\\RestaurantList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport RestaurantCard from './RestaurantCard';\nimport Pagination from './Pagination';\nimport './RestaurantList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantList = () => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    const fetchRestaurants = async page => {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/restaurants?page=${page}&limit=20`);\n        setRestaurants(response.data.restaurants);\n        setTotalPages(response.data.totalPages);\n      } catch (error) {\n        console.error(\"Error fetching restaurants:\", error);\n      }\n    };\n    fetchRestaurants(currentPage);\n  }, [currentPage]);\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurant-list\",\n      children: restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(RestaurantCard, {\n        restaurant: restaurant\n      }, restaurant.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onPageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(RestaurantList, \"q4ZKYBJlQWEaHY6GKZ6hf9RFJ0o=\");\n_c = RestaurantList;\nexport default RestaurantList;\nvar _c;\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"names":["React","useEffect","useState","axios","RestaurantCard","Pagination","jsxDEV","_jsxDEV","RestaurantList","_s","restaurants","setRestaurants","currentPage","setCurrentPage","totalPages","setTotalPages","fetchRestaurants","page","response","get","data","error","console","handlePageChange","children","className","map","restaurant","id","fileName","_jsxFileName","lineNumber","columnNumber","onPageChange","_c","$RefreshReg$"],"sources":["C:/Users/sairam/Projects/anits-assign-sairamnookala/zomato-frontend/src/components/RestaurantList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport RestaurantCard from './RestaurantCard';\r\nimport Pagination from './Pagination';\r\nimport './RestaurantList.css';\r\n\r\nconst RestaurantList = () => {\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n\r\n    useEffect(() => {\r\n        const fetchRestaurants = async (page) => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:3000/api/restaurants?page=${page}&limit=20`);\r\n                setRestaurants(response.data.restaurants);\r\n                setTotalPages(response.data.totalPages);\r\n            } catch (error) {\r\n                console.error(\"Error fetching restaurants:\", error);\r\n            }\r\n        };\r\n\r\n        fetchRestaurants(currentPage);\r\n    }, [currentPage]);\r\n\r\n    const handlePageChange = (page) => {\r\n        setCurrentPage(page);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"restaurant-list\">\r\n                {restaurants.map(restaurant => (\r\n                    <RestaurantCard key={restaurant.id} restaurant={restaurant} />\r\n                ))}\r\n            </div>\r\n            <Pagination\r\n                currentPage={currentPage}\r\n                totalPages={totalPages}\r\n                onPageChange={handlePageChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RestaurantList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACZ,MAAMe,gBAAgB,GAAG,MAAOC,IAAI,IAAK;MACrC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,8CAA8CF,IAAI,WAAW,CAAC;QAC/FN,cAAc,CAACO,QAAQ,CAACE,IAAI,CAACV,WAAW,CAAC;QACzCK,aAAa,CAACG,QAAQ,CAACE,IAAI,CAACN,UAAU,CAAC;MAC3C,CAAC,CAAC,OAAOO,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACJ,CAAC;IAEDL,gBAAgB,CAACJ,WAAW,CAAC;EACjC,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,MAAMW,gBAAgB,GAAIN,IAAI,IAAK;IAC/BJ,cAAc,CAACI,IAAI,CAAC;EACxB,CAAC;EAED,oBACIV,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAKkB,SAAS,EAAC,iBAAiB;MAAAD,QAAA,EAC3Bd,WAAW,CAACgB,GAAG,CAACC,UAAU,iBACvBpB,OAAA,CAACH,cAAc;QAAqBuB,UAAU,EAAEA;MAAW,GAAtCA,UAAU,CAACC,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2B,CAChE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNzB,OAAA,CAACF,UAAU;MACPO,WAAW,EAAEA,WAAY;MACzBE,UAAU,EAAEA,UAAW;MACvBmB,YAAY,EAAEV;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACvB,EAAA,CArCID,cAAc;AAAA0B,EAAA,GAAd1B,cAAc;AAuCpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}