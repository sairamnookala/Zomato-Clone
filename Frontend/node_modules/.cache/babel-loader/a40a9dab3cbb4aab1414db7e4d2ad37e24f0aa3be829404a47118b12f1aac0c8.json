{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sairam\\\\Projects\\\\anits-assign-sairamnookala\\\\zomato-frontend\\\\src\\\\components\\\\RestaurantList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport RestaurantCard from './RestaurantCard';\nimport './RestaurantList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantList = () => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const restaurantsPerPage = 5;\n  useEffect(() => {\n    const fetchRestaurants = async page => {\n      const response = await axios.get(`http://localhost:3000/api/restaurants?page=${page}&limit=${restaurantsPerPage}`);\n      setRestaurants(response.data.restaurants);\n      setTotalPages(Math.ceil(response.data.total / restaurantsPerPage));\n    };\n    fetchRestaurants(currentPage);\n  }, [currentPage]);\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurant-list\",\n      children: restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(RestaurantCard, {\n        restaurant: restaurant\n      }, restaurant.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onPageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(RestaurantList, \"SLL9lXlb/AW8OPIF7Gakch+1hQk=\");\n_c = RestaurantList;\nconst Pagination = ({\n  currentPage,\n  totalPages,\n  onPageChange\n}) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= totalPages; i++) {\n    pageNumbers.push(i);\n  }\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"pagination-nav\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `page-item ${currentPage === number ? 'active' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => onPageChange(number),\n          href: \"#!\",\n          className: \"page-link\",\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Pagination;\nexport default RestaurantList;\nvar _c, _c2;\n$RefreshReg$(_c, \"RestaurantList\");\n$RefreshReg$(_c2, \"Pagination\");","map":{"version":3,"names":["React","useEffect","useState","axios","RestaurantCard","jsxDEV","_jsxDEV","RestaurantList","_s","restaurants","setRestaurants","currentPage","setCurrentPage","totalPages","setTotalPages","restaurantsPerPage","fetchRestaurants","page","response","get","data","Math","ceil","total","handlePageChange","children","className","map","restaurant","id","fileName","_jsxFileName","lineNumber","columnNumber","Pagination","onPageChange","_c","pageNumbers","i","push","number","onClick","href","_c2","$RefreshReg$"],"sources":["C:/Users/sairam/Projects/anits-assign-sairamnookala/zomato-frontend/src/components/RestaurantList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport RestaurantCard from './RestaurantCard';\r\nimport './RestaurantList.css';\r\n\r\nconst RestaurantList = () => {\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const restaurantsPerPage = 5;\r\n\r\n    useEffect(() => {\r\n        const fetchRestaurants = async (page) => {\r\n            const response = await axios.get(`http://localhost:3000/api/restaurants?page=${page}&limit=${restaurantsPerPage}`);\r\n            setRestaurants(response.data.restaurants);\r\n            setTotalPages(Math.ceil(response.data.total / restaurantsPerPage));\r\n        };\r\n\r\n        fetchRestaurants(currentPage);\r\n    }, [currentPage]);\r\n\r\n    const handlePageChange = (page) => {\r\n        setCurrentPage(page);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"restaurant-list\">\r\n                {restaurants.map(restaurant => (\r\n                    <RestaurantCard key={restaurant.id} restaurant={restaurant} />\r\n                ))}\r\n            </div>\r\n            <Pagination\r\n                currentPage={currentPage}\r\n                totalPages={totalPages}\r\n                onPageChange={handlePageChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Pagination = ({ currentPage, totalPages, onPageChange }) => {\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= totalPages; i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav className=\"pagination-nav\">\r\n            <ul className=\"pagination\">\r\n                {pageNumbers.map(number => (\r\n                    <li key={number} className={`page-item ${currentPage === number ? 'active' : ''}`}>\r\n                        <a onClick={() => onPageChange(number)} href=\"#!\" className=\"page-link\">\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default RestaurantList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}