{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sairam\\\\Projects\\\\anits-assign-sairamnookala\\\\zomato-frontend\\\\src\\\\components\\\\RestaurantList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './RestaurantList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantList = () => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [restaurantsPerPage] = useState(5);\n  useEffect(() => {\n    // Fetch the list of restaurants from an API or a static list\n    // For demonstration, using a static list\n    const fetchRestaurants = async () => {\n      const response = await fetch('/path-to-your-restaurant-api'); // replace with your API\n      const data = await response.json();\n      setRestaurants(data);\n    };\n    fetchRestaurants();\n  }, []);\n\n  // Get current restaurants\n  const indexOfLastRestaurant = currentPage * restaurantsPerPage;\n  const indexOfFirstRestaurant = indexOfLastRestaurant - restaurantsPerPage;\n  const currentRestaurants = restaurants.slice(indexOfFirstRestaurant, indexOfLastRestaurant);\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"restaurant-list\",\n      children: currentRestaurants.map((restaurant, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [restaurant.name, \" - \", restaurant.cuisine]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      restaurantsPerPage: restaurantsPerPage,\n      totalRestaurants: restaurants.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(RestaurantList, \"PZwrsWTCApUI3nP/wcfOVasZIJY=\");\n_c = RestaurantList;\nconst Pagination = ({\n  restaurantsPerPage,\n  totalRestaurants,\n  paginate\n}) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalRestaurants / restaurantsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"page-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => paginate(number),\n          href: \"!#\",\n          className: \"page-link\",\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Pagination;\nexport default RestaurantList;\nvar _c, _c2;\n$RefreshReg$(_c, \"RestaurantList\");\n$RefreshReg$(_c2, \"Pagination\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RestaurantList","_s","restaurants","setRestaurants","currentPage","setCurrentPage","restaurantsPerPage","fetchRestaurants","response","fetch","data","json","indexOfLastRestaurant","indexOfFirstRestaurant","currentRestaurants","slice","paginate","pageNumber","children","className","map","restaurant","index","name","cuisine","fileName","_jsxFileName","lineNumber","columnNumber","Pagination","totalRestaurants","length","_c","pageNumbers","i","Math","ceil","push","number","onClick","href","_c2","$RefreshReg$"],"sources":["C:/Users/sairam/Projects/anits-assign-sairamnookala/zomato-frontend/src/components/RestaurantList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './RestaurantList.css';\r\n\r\nconst RestaurantList = () => {\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [restaurantsPerPage] = useState(5);\r\n\r\n    useEffect(() => {\r\n        // Fetch the list of restaurants from an API or a static list\r\n        // For demonstration, using a static list\r\n        const fetchRestaurants = async () => {\r\n            const response = await fetch('/path-to-your-restaurant-api'); // replace with your API\r\n            const data = await response.json();\r\n            setRestaurants(data);\r\n        };\r\n\r\n        fetchRestaurants();\r\n    }, []);\r\n\r\n    // Get current restaurants\r\n    const indexOfLastRestaurant = currentPage * restaurantsPerPage;\r\n    const indexOfFirstRestaurant = indexOfLastRestaurant - restaurantsPerPage;\r\n    const currentRestaurants = restaurants.slice(indexOfFirstRestaurant, indexOfLastRestaurant);\r\n\r\n    // Change page\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"restaurant-list\">\r\n                {currentRestaurants.map((restaurant, index) => (\r\n                    <li key={index}>\r\n                        {restaurant.name} - {restaurant.cuisine}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <Pagination\r\n                restaurantsPerPage={restaurantsPerPage}\r\n                totalRestaurants={restaurants.length}\r\n                paginate={paginate}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Pagination = ({ restaurantsPerPage, totalRestaurants, paginate }) => {\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalRestaurants / restaurantsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pageNumbers.map(number => (\r\n                    <li key={number} className=\"page-item\">\r\n                        <a onClick={() => paginate(number)} href=\"!#\" className=\"page-link\">\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default RestaurantList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}